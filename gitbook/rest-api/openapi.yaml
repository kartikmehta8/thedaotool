openapi: 3.0.0
info:
  title: The DAO Tool API
  version: "1.0.0"
  description: |
    REST API for managing bounties, contributors and organizations along with
    GitHub and Discord integrations.
servers:
  - url: https://api.example.com
  - url: http://localhost:3000
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
paths:
  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
      tags:
        - Auth
  /api/auth/signup:
    post:
      summary: Create new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                role:
                  type: string
                  enum: [contributor, organization]
              required:
                - email
                - password
                - role
      responses:
        '200':
          description: Signup successful
      tags:
        - Auth
  /api/auth/forgot-password:
    post:
      summary: Request password reset link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '200':
          description: Reset email sent
      tags:
        - Auth
  /api/auth/reset-password:
    post:
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                token:
                  type: string
                newPassword:
                  type: string
                  minLength: 8
              required:
                - email
                - token
                - newPassword
      responses:
        '200':
          description: Password reset
      tags:
        - Auth
  /api/auth/verify-email:
    post:
      summary: Send verification email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '200':
          description: Verification sent
      tags:
        - Auth
  /api/auth/verify-token:
    post:
      summary: Verify OTP or reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                token:
                  type: string
              required:
                - email
                - token
      responses:
        '200':
          description: Token verified
      tags:
        - Auth
  /api/contributor/apply:
    post:
      summary: Apply to a bounty
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bountyId:
                  type: string
              required:
                - bountyId
      responses:
        '200':
          description: Application submitted
      tags:
        - Contributor
  /api/contributor/submit:
    post:
      summary: Submit work for a bounty
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bountyId:
                  type: string
                submittedLink:
                  type: string
                  format: uri
              required:
                - bountyId
                - submittedLink
      responses:
        '200':
          description: Work submitted
      tags:
        - Contributor
  /api/contributor/bounties/{uid}:
    get:
      summary: Fetch available bounties
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of bounties
      tags:
        - Contributor
  /api/contributor/profile/{uid}:
    get:
      summary: Get contributor profile
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contributor profile
      tags:
        - Contributor
    put:
      summary: Update contributor profile
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                linkedin:
                  type: string
                  format: uri
                portfolio:
                  type: string
                  format: uri
                roleTitle:
                  type: string
                skills:
                  type: string
      responses:
        '200':
          description: Profile updated
      tags:
        - Contributor
  /api/contributor/unassign:
    put:
      summary: Unassign from a bounty
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bountyId:
                  type: string
              required:
                - bountyId
      responses:
        '200':
          description: Unassigned
      tags:
        - Contributor
  /api/contributor/payments/{uid}:
    get:
      summary: List contributor payments
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment history
      tags:
        - Contributor
  /api/contributor/analytics/{uid}:
    get:
      summary: View contributor analytics
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Analytics information
      tags:
        - Contributor
  /api/discord/oauth:
    get:
      summary: Start Discord OAuth flow
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect to Discord
      tags:
        - Discord
  /api/discord/callback:
    get:
      summary: Discord OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: query
          name: state
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OAuth complete
      tags:
        - Discord
  /api/discord/channels/{uid}:
    get:
      summary: Fetch Discord channels for organization
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of channels
      tags:
        - Discord
  /api/discord/channel/{uid}:
    put:
      summary: Save selected Discord channel
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelId:
                  type: string
              required:
                - channelId
      responses:
        '200':
          description: Channel saved
      tags:
        - Discord
  /api/github/auth:
    get:
      summary: Start GitHub OAuth flow
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect to GitHub
      tags:
        - GitHub
  /api/github/callback:
    get:
      summary: GitHub OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: query
          name: state
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OAuth complete
      tags:
        - GitHub
  /api/github/repos/{uid}:
    get:
      summary: List repositories for organization
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Repository list
      tags:
        - GitHub
  /api/github/repo/{uid}:
    post:
      summary: Save selected repository
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo:
                  type: string
              required:
                - repo
      responses:
        '200':
          description: Repository saved
      tags:
        - GitHub
  /api/organization/bounty:
    post:
      summary: Create a new bounty
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                values:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    deadline:
                      type: string
                      format: date-time
                    amount:
                      type: number
                    tags:
                      type: string
                  required:
                    - name
                    - description
                    - deadline
                    - amount
                userId:
                  type: string
              required:
                - values
                - userId
      responses:
        '200':
          description: Bounty created
      tags:
        - Organization
  /api/organization/bounty/{id}:
    delete:
      summary: Delete a bounty
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bounty removed
      tags:
        - Organization
    put:
      summary: Update bounty details
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                deadline:
                  type: string
                  format: date-time
                amount:
                  type: number
                status:
                  type: string
                  enum: [open, assigned, pending_payment, paid, closed]
                submittedLink:
                  type: string
                  format: uri
                contributorId:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Bounty updated
      tags:
        - Organization
  /api/organization/bounties/{uid}:
    get:
      summary: List bounties for an organization
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bounty list
      tags:
        - Organization
  /api/organization/contributor/{id}:
    get:
      summary: Get contributor details
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contributor details
      tags:
        - Organization
    put:
      summary: Update contributor
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                linkedin:
                  type: string
                  format: uri
                portfolio:
                  type: string
                  format: uri
                roleTitle:
                  type: string
                accountNumber:
                  type: string
                routingNumber:
                  type: string
                skills:
                  type: string
      responses:
        '200':
          description: Contributor updated
      tags:
        - Organization
  /api/organization/bounties/{bountyId}/unassign:
    put:
      summary: Unassign a contributor from bounty
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: bountyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contributor unassigned
      tags:
        - Organization
  /api/organization/bounties/{bountyId}/pay:
    post:
      summary: Pay bounty reward
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: bountyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment sent
      tags:
        - Organization
  /api/organization/profile/{uid}:
    get:
      summary: Get organization profile
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization profile
      tags:
        - Organization
    put:
      summary: Save organization profile
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                companyName:
                  type: string
                description:
                  type: string
                discordAccessToken:
                  type: string
                discordChannelId:
                  type: string
                discordEnabled:
                  type: boolean
                discordGuild:
                  type: string
                discordSendMode:
                  type: string
                email:
                  type: string
                  format: email
                githubToken:
                  type: string
                industry:
                  type: string
                repo:
                  type: string
                website:
                  type: string
                  format: uri
      responses:
        '200':
          description: Profile saved
      tags:
        - Organization
  /api/organization/payments/{uid}:
    get:
      summary: View payment history
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization payment history
      tags:
        - Organization
  /api/organization/analytics/{uid}:
    get:
      summary: Organization analytics
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Analytics information
      tags:
        - Organization
  /api/wallet/balance:
    get:
      summary: Get wallet balance
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current balance
      tags:
        - Wallet
  /api/wallet/send:
    post:
      summary: Send funds from wallet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toAddress:
                  type: string
                amount:
                  type: number
                  minimum: 0.3
              required:
                - toAddress
                - amount
      responses:
        '200':
          description: Transaction sent
      tags:
        - Wallet
