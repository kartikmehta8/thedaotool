openapi: 3.0.3
info:
  title: Auth API
  version: 1.0.0
paths:
  /api/auth/login:
    post:
      summary: User login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
        '429':
          description: Too many login attempts

  /api/auth/signup:
    post:
      summary: Create new account
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          description: Signup successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '409':
          description: Email already in use

  /api/auth/forgot-password:
    post:
      summary: Request password reset link
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailOnly'
      responses:
        '200':
          description: Reset OTP sent
        '404':
          description: Email not registered

  /api/auth/reset-password:
    post:
      summary: Reset user password
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired token

  /api/auth/verify-email:
    post:
      summary: Send verification email
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailOnly'
      responses:
        '200':
          description: Verification OTP sent

  /api/auth/verify-token:
    post:
      summary: Verify OTP or reset token
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTokenRequest'
      responses:
        '200':
          description: Token verified
        '400':
          description: Invalid or expired token

components:
  schemas:
    EmailOnly:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8

    SignupRequest:
      type: object
      required: [email, password, role]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        role:
          type: string
          enum: [contributor, organization]

    ResetPasswordRequest:
      type: object
      required: [email, token, newPassword]
      properties:
        email:
          type: string
          format: email
        token:
          type: string
        newPassword:
          type: string
          minLength: 8

    VerifyTokenRequest:
      type: object
      required: [email, token]
      properties:
        email:
          type: string
          format: email
        token:
          type: string

    AuthResponse:
      type: object
      properties:
        message:
          type: string
          example: Login successful
        user:
          type: object
          properties:
            uid:
              type: string
            email:
              type: string
              format: email
            role:
              type: string
            emailVerified:
              type: boolean
            walletAddress:
              type: string
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
